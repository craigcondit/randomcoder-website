<project name="randomcoder" default="build" basedir=".">

	<property file="local.build.properties" />
	<property file="build.properties" />
	
	<path id="classpath">
		<fileset dir="dep">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="lib">
			<include name="**/*.jar" />
		</fileset>
	</path>
	
	<path id="database.classpath">
		<fileset dir="dep">
			<include name="**/*.jar" />
		</fileset>		
	</path>
	
	<fileset id="test.cases" dir="src">
		<include name="**/*Test.java" />
	</fileset>
	
	<target name="build" description="Build web app">
		<mkdir dir="classes" />

		<!-- Copy non-java elements from src to classes -->
		<copy todir="classes" includeemptydirs="false">
			<fileset dir="src">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>

		<!-- Compile java classes -->
		<javac deprecation="true"
				classpathref="classpath"
				srcdir="src"
				destdir="classes"
				debug="true">
			<compilerarg value="-Xlint:unchecked" />
		</javac>
	</target>

	<target name="javadoc" description="Build Java documentation">
		<mkdir dir="../docs" />
		<mkdir dir="../docs/apidocs" />
		<javadoc
			classpathref="classpath"
			destdir="../docs/apidocs"
			author="true"
			charset="UTF-8"
			docencoding="UTF-8"
			windowtitle="RandomCoder.Com Website"
			doctitle="RandomCoder.Com Website"
			verbose="false"			
			version="true">
			<fileset dir="src" />			
			<link href="http://java.sun.com/j2se/1.5.0/docs/api/" />
			<link href="http://java.sun.com/j2ee/1.4/docs/api/" />
			<link href="http://www.springframework.org/docs/api/" />
			<link href="http://www.hibernate.org/hib_docs/v3/api/" />
			<link href="http://aopalliance.sourceforge.net/doc/" />
			<link href="http://randomcoder.com/javadoc/citadel/" />
			<link href="http://randomcoder.com/javadoc/taglibs/" />
		</javadoc>
	</target>
	
	<target name="clean" description="Clean build targets">
		<delete dir="../docs/apidocs" />
		<delete dir="classes" />
	</target>
		
	<target name="test-db-init" description="Initialize test database">
		<antcall inheritall="false" target="test-db-init.internal">
			<param name="database.driver" value="${test.database.driver}" />
			<param name="database.type" value="${test.database.type}" />
			<param name="database.host" value="${test.database.host}" />
			<param name="database.name" value="${test.database.name}" />
			<param name="database.admin.username" value="${test.database.admin.username}" />
			<param name="database.admin.password" value="${test.database.admin.password}" />
			<param name="database.user.username" value="${test.database.user.username}" />
			<param name="database.user.password" value="${test.database.user.password}" />
		</antcall>
	</target>
	
	<target name="test-db-init.internal" depends="db-init,db-drop,db-create,db-populate,db-upgrade,db-grant" />
		
	<target name="test-clean" description="Cleans test results">
		<delete dir="test-results" />
	</target>
		
	<target name="cruisecontrol" depends="clean,test" description="Run CruiseControl build" />
	
	<target name="svnupdate" description="Updates latest code from SVN">
		<exec command="svn" dir="${basedir}/..">
			<arg value="update" />
		</exec>
	</target>
	
	<target name="test" description="Unit tests" depends="build,test-db-init">
		<!-- NOTE: This requires JUnit 4.x and ANT 1.7 -->
		
		<delete dir="test-results" />
		<mkdir dir="test-results" />
		
		<junit printsummary="on" fork="true" haltonfailure="on" showoutput="off" dir="${basedir}">
			
			<jvmarg value="-Dtest.database.driver=${test.database.driver}" />
			<jvmarg value="-Dtest.database.type=${test.database.type}" />
			<jvmarg value="-Dtest.database.host=${test.database.host}" />
			<jvmarg value="-Dtest.database.name=${test.database.name}" />
			<jvmarg value="-Dtest.database.admin.username=${test.database.admin.username}" />
			<jvmarg value="-Dtest.database.admin.password=${test.database.admin.password}" />
			<jvmarg value="-Dtest.database.user.username=${test.database.user.username}" />
			<jvmarg value="-Dtest.database.user.password=${test.database.user.password}" />			
			<jvmarg value="-Dtest.dataset.path=${basedir}/test/test-data.xml" />
			<jvmarg value="-Dtest.webinf.dir=${basedir}" />
			<jvmarg value="-Dlog4j.configuration=./test/log4j.xml" />
			
			<classpath>
				<pathelement location="classes" />
				<path refid="classpath" />
			</classpath>
			
			<formatter type="xml" />
			
			<formatter type="brief" usefile="false" />
			
			<batchtest haltonfailure="no" todir="test-results">
				<fileset refid="test.cases" />
			</batchtest>
			
		</junit>
		
	</target>

	<target name="db-init">
		<fail unless="database.driver" message="Please set database.driver" />
		<fail unless="database.type" message="Please set database.type" />
		<fail unless="database.host" message="Please set database.host" />
		<fail unless="database.name" message="Please set database.name" />
		<fail unless="database.admin.username" message="Please set database.admin.username" />
		<fail unless="database.admin.password" message="Please set database.admin.password" />		
		<fail unless="database.user.username" message="Please set database.user.username" />
		<fail unless="database.user.password" message="Please set database.user.password" />		
		<property name="database.url" value="jdbc:${database.type}://${database.host}/${database.name}" />		
	</target>
	
	<target name="db-create" description="Create database tables" depends="db-init">
		<sql 
			classpathref="database.classpath"
			driver="${database.driver}"
			url="${database.url}"
			userid="${database.admin.username}"
			password="${database.admin.password}">
			<transaction src="database/create.sql" />
		</sql>
	</target>

	<target name="db-upgrade" description="Upgrade database tables" depends="db-init">
		<sql
			classpathref="database.classpath"
			driver="${database.driver}"
			url="${database.url}"
			userid="${database.admin.username}"
			password="${database.admin.password}">
			<transaction src="database/upgrade-1.1.sql" />
			<transaction src="database/upgrade-1.2.sql" />
			<transaction src="database/upgrade-1.3.sql" />
		</sql>
	</target>

	<target name="db-drop" description="Drop database tables" depends="db-init">
		<sql
			classpathref="database.classpath"
			driver="${database.driver}"
			url="${database.url}"
			userid="${database.admin.username}"
			password="${database.admin.password}"
			onerror="continue"
			autocommit="true"
			src="database/drop.sql" />
	</target>
	
	<target name="db-populate" description="Populate database tables with seed data" depends="db-init">
		<sql
			classpathref="database.classpath"
			driver="${database.driver}"
			url="${database.url}"
			userid="${database.admin.username}"
			password="${database.admin.password}">
			<transaction src="database/populate.sql" />
		</sql>	
	</target>

	<target name="db-grant" description="Grant database permissions" depends="db-init">
		<tempfile property="db.grant.tempfile" destdir="${java.io.tmpdir}" prefix="grant" suffix=".sql" />		
		<filter token="DB_USERNAME" value="${database.user.username}" />
		<copy tofile="${db.grant.tempfile}" file="database/grant.sql" filtering="true" />
		<sql
			classpathref="database.classpath"
			driver="${database.driver}"
			url="${database.url}"
			userid="${database.admin.username}"
			password="${database.admin.password}">
			<transaction src="${db.grant.tempfile}" />
		</sql>	
		<delete file="${db.grant.tempfile}" />
	</target>
	
	<target name="db-test" description="Populate database tables with test data" depends="db-init">
		<sql
			classpathref="database.classpath"
			driver="${database.driver}"
			url="${database.url}"
			userid="${database.admin.username}"
			password="${database.admin.password}">
			<transaction src="database/test.sql" />
		</sql>	
	</target>
	
	<target name="db-dev" description="Rebuild development database" depends="db-drop,db-create,db-populate,db-upgrade,db-grant,db-test" />

</project>