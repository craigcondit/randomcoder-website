<?xml version="1.0" encoding="UTF-8"?>
<beans
		xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:jee="http://www.springframework.org/schema/jee"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
			http://www.springframework.org/schema/jee
			http://www.springframework.org/schema/jee/spring-jee-2.0.xsd
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">
	
	<!-- Enforce @Required annotations -->
	<bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor" />
	
	<!-- Declarative Transactions via Annotations -->
	<tx:annotation-driven />
	
	<!-- JNDI resources -->
	<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/randomcoder" />

	<!-- Message source -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="ApplicationResources" />
	</bean>	
	
	<!-- Hibernate session factory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.current_session_context_class">thread</prop>
				<prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory</prop>                 
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.max_fetch_depth">2</prop>
				<prop key="hibernate.jdbc.fetch_size">100</prop>
				<prop key="hibernate.jdbc.batch_size">10</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.SingletonEhCacheProvider</prop>
			</props>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.randomcoder.article.Article</value>
				<value>com.randomcoder.article.Comment</value>
				<value>com.randomcoder.user.User</value>
				<value>com.randomcoder.user.CardSpaceToken</value>
				<value>com.randomcoder.user.Role</value>
				<value>com.randomcoder.tag.Tag</value>
				<value>com.randomcoder.security.cardspace.CardSpaceSeenToken</value>
			</list>
		</property>
		<property name="entityCacheStrategies">
			<props>
				<prop key="com.randomcoder.article.Article">read-write</prop>
				<prop key="com.randomcoder.article.Comment">read-write</prop>
				<prop key="com.randomcoder.user.User">read-write</prop>
				<prop key="com.randomcoder.user.CardSpaceToken">read-write</prop>
				<prop key="com.randomcoder.user.Role">read-only</prop>
				<prop key="com.randomcoder.tag.Tag">read-write</prop>
			</props>
		</property>
		<property name="collectionCacheStrategies">
			<props>
				<prop key="com.randomcoder.user.User.roles">read-write</prop>
				<prop key="com.randomcoder.article.Article.tags">read-write</prop>
				<prop key="com.randomcoder.article.Article.comments">read-write</prop>
			</props>
		</property>
	</bean>
	
	<!-- Transaction manager -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>	
	
	<!-- Content filters -->
	<bean id="contentFilter" class="com.randomcoder.content.MultiContentFilter">
		<property name="filters">
			<map>
				<entry key="text/plain" value-ref="textFilter" />
				<entry key="application/xhtml+xml" value-ref="xhtmlFilter" />
			</map>
		</property>
		<property name="defaultHandler" ref="textFilter" />
	</bean>
	
	<bean id="textFilter" class="com.randomcoder.content.TextFilter" />
	<bean id="xhtmlFilter" class="com.randomcoder.content.XHTMLFilter">
		<property name="allowedClasses">
			<set>
				<value>lang-xml</value>
				<value>lang-js</value>
				<value>lang-css</value>
				<value>external</value>
			</set>
		</property>
	</bean>
	
	<!-- Dao introduction adviser -->
	<bean id="finderIntroductionInterceptor" class="com.randomcoder.dao.finder.FinderIntroductionInterceptor" />

	<!-- Generic DAO target -->
	<bean id="abstractDaoTarget" class="com.randomcoder.dao.hibernate.HibernateDao" abstract="true">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- Generic DAO proxy -->
	<bean id="abstractDao" class="org.springframework.aop.framework.ProxyFactoryBean" abstract="true">
		<property name="interceptorNames">
			<list>
				<value>finderIntroductionInterceptor</value>
			</list>
		</property>
	</bean>
	
	<!-- Concrete DAO objects -->
	<bean id="userDao" parent="abstractDao">
		<property name="proxyInterfaces" value="com.randomcoder.user.UserDao" />
		<property name="target">
			<bean parent="abstractDaoTarget">
				<constructor-arg value="com.randomcoder.user.User" />
			</bean>
		</property>
	</bean>

	<bean id="cardSpaceTokenDao" parent="abstractDao">
		<property name="proxyInterfaces" value="com.randomcoder.user.CardSpaceTokenDao" />
		<property name="target">
			<bean parent="abstractDaoTarget">
				<constructor-arg value="com.randomcoder.user.CardSpaceToken" />
			</bean>
		</property>
	</bean>
	
	<bean id="roleDao" parent="abstractDao">
		<property name="proxyInterfaces" value="com.randomcoder.user.RoleDao" />
		<property name="target">
			<bean parent="abstractDaoTarget">
				<constructor-arg value="com.randomcoder.user.Role" />
			</bean>
		</property>
	</bean>
	
	<bean id="articleDao" parent="abstractDao">
	    <property name="proxyInterfaces" value="com.randomcoder.article.ArticleDao" />
	    <property name="target">
	        <bean parent="abstractDaoTarget">
	            <constructor-arg value="com.randomcoder.article.Article" />
	        </bean>
    	</property>
	</bean>

	<bean id="commentDao" parent="abstractDao">
	    <property name="proxyInterfaces" value="com.randomcoder.article.CommentDao" />
	    <property name="target">
	        <bean parent="abstractDaoTarget">
	            <constructor-arg value="com.randomcoder.article.Comment" />
	        </bean>
    	</property>
	</bean>

	<bean
		id="abstractTagDaoTarget"
		class="com.randomcoder.tag.TagDaoImpl"
		parent="abstractDaoTarget"
		abstract="true" />
	<bean id="abstractTagDao" parent="abstractDao" abstract="true" />	
	<bean id="tagDao" parent="abstractTagDao">
		<property name="proxyInterfaces" value="com.randomcoder.tag.TagDao" />
		<property name="target">
			<bean parent="abstractTagDaoTarget" />
		</property>
	</bean>

	<bean
		id="abstractCardSpaceSeenTokenDaoTarget"
		class="com.randomcoder.security.cardspace.CardSpaceSeenTokenDaoImpl"
		parent="abstractDaoTarget"
		abstract="true" />
	<bean id="abstractCardSpaceSeenTokenDao" parent="abstractDao" abstract="true" />	
	<bean id="cardSpaceSeenTokenDao" parent="abstractCardSpaceSeenTokenDao">
		<property name="proxyInterfaces" value="com.randomcoder.security.cardspace.CardSpaceSeenTokenDao" />
		<property name="target">
			<bean parent="abstractCardSpaceSeenTokenDaoTarget" />
		</property>
	</bean>
	
	<!-- Business objects -->
	<bean id="articleBusiness" class="com.randomcoder.article.ArticleBusinessImpl">
		<property name="userDao" ref="userDao" />
		<property name="roleDao" ref="roleDao" />
		<property name="articleDao" ref="articleDao" />
		<property name="tagDao" ref="tagDao" />
		<property name="commentDao" ref="commentDao" />
	</bean>
	
	<bean id="userBusiness" class="com.randomcoder.user.UserBusinessImpl">
		<property name="userDao" ref="userDao" />
		<property name="cardSpaceTokenDao" ref="cardSpaceTokenDao" />
	</bean>

	<bean id="tagBusiness" class="com.randomcoder.tag.TagBusinessImpl">
		<property name="tagDao" ref="tagDao" />
		<property name="articleDao" ref="articleDao" />
	</bean>
	
	<!-- Crypto -->
	<bean id="encryptionContext" class="com.randomcoder.crypto.TransientAESEncryptionContext">
		<property name="keySize" value="256" />
	</bean>
	
	<!-- Downloads -->
	<bean id="packageListProducer" class="com.randomcoder.download.AggregatePackageListProducer">
		<property name="producers">
			<list>
				<bean class="com.randomcoder.download.maven.MavenRepository">
					<property name="url" value="http://randomcoder.com/maven/repository/release/" />
					<property name="projects">
						<list>
							<bean class="com.randomcoder.download.maven.MavenProject">
								<property name="projectName" value="randomcoder-website" />
								<property name="projectDescription" value="Randomcoder.com web site" />
								<property name="directory" value="com/randomcoder/randomcoder-website" />
								<property name="extensionMappings">
									<map>
										<entry key="-src.tar.bz2" value="src" />
										<entry key="-src.tar.gz" value="src" />
										<entry key="-src.zip" value="src" />
										<entry key="-javadoc.jar" value="javadoc" />
									</map>
								</property>
							</bean>
							<bean class="com.randomcoder.download.maven.MavenProject">
								<property name="projectName" value="randomcoder-taglibs" />
								<property name="projectDescription" value="JSP tag libraries for common website functionality" />
								<property name="directory" value="com/randomcoder/randomcoder-taglibs" />					
								<property name="extensionMappings">
									<map>
										<entry key=".jar" value="jar" />
										<entry key="-src.tar.bz2" value="src" />
										<entry key="-src.tar.gz" value="src" />
										<entry key="-src.zip" value="src" />
										<entry key="-javadoc.jar" value="javadoc" />
										<entry key="-tlddoc.jar" value="tlddoc" />
									</map>
								</property>
							</bean>
						</list>
					</property>
				</bean>
				<bean class="com.randomcoder.download.http.HttpRepository">
					<property name="projects">
						<list>
							<bean class="com.randomcoder.download.http.HttpProject">
								<property name="projectName" value="randomcoder-taglibs" />
								<property name="projectDescription" value="JSP tag libraries for common website functionality" />
								<property name="baseUrl" value="http://randomcoder.com/projects/taglibs/" />
								<property name="baseName" value="randomcoder-taglibs" />
								<property name="extensionMappings">
									<map>
										<entry key=".jar" value="jar" />
										<entry key="-src.tar.gz" value="src" />
										<entry key="-src.zip" value="src" />
										<entry key="-doc.jar" value="javadoc" />
										<entry key="-tlddoc.jar" value="tlddoc" />
									</map>
								</property>
								<property name="versions">
									<list>
										<value>1.0.0</value>
										<value>1.1.0</value>
										<value>1.1.1</value>
										<value>1.1.2</value>
										<value>1.1.3</value>
										<value>1.2.0</value>
										<value>1.3.0</value>
										<value>1.3.1</value>
										<value>1.3.2</value>
										<value>1.3.3</value>
										<value>1.4.0</value>
										<value>1.5.0</value>
										<value>1.5.1</value>
									</list>
								</property>
							</bean>
							<bean class="com.randomcoder.download.http.HttpProject">
								<property name="projectName" value="randomcoder-citadel" />
								<property name="projectDescription" value="Java security framework (deprecated)" />
								<property name="baseUrl" value="http://randomcoder.com/projects/citadel/" />
								<property name="baseName" value="randomcoder-citadel" />
								<property name="extensionMappings">
									<map>
										<entry key=".jar" value="jar" />
										<entry key="-src.tar.gz" value="src" />
										<entry key="-src.zip" value="src" />
										<entry key="-doc.jar" value="javadoc" />
									</map>
								</property>
								<property name="versions">
									<list>
										<value>1.0.0</value>
										<value>1.0.1</value>
										<value>1.0.2</value>
										<value>1.0.3</value>
										<value>1.0.4</value>
										<value>1.0.6</value>
										<value>1.0.7</value>
										<value>1.0.8</value>
										<value>1.0.9</value>
									</list>
								</property>
							</bean>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>	
	
</beans>